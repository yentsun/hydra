Базовые операции
================

Все команды Hydra - обычные команды `Fabric` и определены в файле
:file:`fabfile.py`. Выполняются они с префиксом :command:`fab` (например
:command:`fab list`, :command:`fab update:nek`). Полный их список можно
получить выполнив :command:`fab --list`.

:command:`list`
    Вывод списка всех проектов в БД с количеством лотов в каждом

:command:`check:имя_проекта`
    Проверка проекта на целостность

:command:`new:имя_проекта`
    Создание нового проекта

:command:`can:имя_проекта`
    Привести данные к каноническому виду (:file:`canonic.json`)

:command:`update:имя_проекта`
    Привести данные к каноническому виду (включает в себя команду
    :command:`can`) и занести их в БД

:command:`json:имя_проекта[,shorthand]`
    Рендеринг данных для сайта (:file:`data.json`). Возможно указание диапазона
    в shorthand-формате

:command:`apt:имя_проекта[,shorthand,limit,assets]`
    Рендеринг материалов по квартирам. Параметры:
    *shorthand* - диапазон;
    *limit* - ограничение количества (например для тестирования);
    *assets* - тип материалов для рендеринга через запятую. По умолчанию -
    *booklet*

:command:`floor:имя_проекта[,shorthand,limit]`
    Рендеринг материалов по этажам. Параметры:
    *shorthand* - диапазон;
    *limit* - ограничение количества;

:command:`host[:имя_проекта,environment]`
    Определение удаленного хоста. Используется в основном перед командой
    :command:`deploy`. Параметры: *environment* - тип окружения, обычно
    *staging* или *production*, по умолчанию - *staging*

:command:`deploy:имя_проекта[,entity]`
    Выгрузка материалов на удаленный хост. Параметры: *entity* - сущность
    (данные, квартиры, этажи т. д.), которую требуется выгрузить.
    По умолчанию - *json*